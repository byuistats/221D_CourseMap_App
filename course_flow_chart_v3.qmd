---
title: "Mapping Math 221"
author: "Brother Cannon"
format:
  html:
    self-contained: true
    page-layout: full
    title-block-banner: true
    toc: true
    toc-depth: 3
    toc-location: body
    number-sections: false
    html-math-method: katex
    code-fold: true
    code-summary: "Show the code"
    code-overflow: wrap
    code-copy: hover
    code-tools:
        source: false
        toggle: true
        caption: See code
execute: 
  warning: false
    
---





```{python}
from graphviz import Digraph

# Create a Digraph object
dot = Digraph()

# Subgraph 1: Defining Response and Explanatory Variable Types
with dot.subgraph(name="cluster_define_variables") as cluster:
    cluster.attr(label="Define Variables", style="solid", color="darkred", penwidth="3.0")
    cluster.node('B', 'What is your Response \n variable?', shape="diamond", style='filled', fillcolor='lightgray')
    cluster.node('Q', 'What is your Explanatory \n Variable?', shape="diamond", style='filled', fillcolor='forestgreen')
    cluster.node('C', 'What is your Explanatory \n Variable?', shape="diamond", style='filled', fillcolor='royalblue')
    cluster.edge("B", "Q", label="Quantitative")
    cluster.edge("B", "C", label="Categorical")

# Subgraph 2: Descriptive Statistics
with dot.subgraph(name="cluster_descriptive_statistics") as cluster:
    cluster.attr(label="Descriptive Statistics", style="solid", color="darkred", penwidth="3.0")
    cluster.node('R', 'Mean, Median, Mode, \n Standard Deviation, Percentiles\nGraphs: Histogram', shape="rectangle", style='filled', fillcolor='mediumseagreen')
    cluster.node('cat', 'Grouped Means, Medians, \n Standard Deviations, Percentiles\nGraphs: side-by-side Boxplot', shape="rectangle", style='filled', fillcolor='mediumseagreen')
    cluster.node('SLR_Desc', 'Scatter plot, \n geom_smooth()', shape="rectangle", style='filled', fillcolor='mediumseagreen')
    cluster.node('P1_Desc', 'Proportion (p̂)\nGraphs: Bar chart, Pie chart', shape="rectangle", style='filled', fillcolor='steelblue')
    cluster.node('P2_Desc', 'Proportions (p̂₁, p̂₂)\nGraphs: Clustered bar chart', shape="rectangle", style='filled', fillcolor='steelblue')
    cluster.node('Chi_Desc', 'Two-way table\nGraphs: Clustered bar chart', shape="rectangle", style='filled', fillcolor='steelblue')

# Subgraph 3: Inferential Statistics
with dot.subgraph(name="cluster_inferential_statistics") as cluster:
    cluster.attr(label="Inferential Statistics", style="solid", color="darkred", penwidth="3.0")
    cluster.node('S', 'One-sample t-test: \n t = (x̄ - μ) / (s / √n) \n CI: x̄ ± t*s/√n', shape="rectangle", style='filled', fillcolor='palegreen')
    cluster.node('T', 'How Many \n Groups?', shape="diamond", style='filled', fillcolor='mediumseagreen')
    cluster.node('dep', 'Matched Pairs t-test: \n t = (d̄ - μ₀) / (s_d / √n) \n CI: d̄ ± t*s_d/√n', shape="rectangle", style='filled', fillcolor='palegreen')
    cluster.node('indep', '2-sample t-test: \n t = (x̄₁ - x̄₂) / √((s₁²/n₁) + (s₂²/n₂)) \n CI:  (x̄₁ - x̄₂) ± t*√((s₁²/n₁) + (s₂²/n₂))', shape="rectangle", style='filled', fillcolor='palegreen')
    cluster.node('mult', r'<<b>F-Statistic:</b><br/>F = MST / MSE<br/>MST = SST / (k - 1)<br/>MSE = SSE / (n - k)>', shape='rectangle', style='filled', fillcolor='palegreen')
    cluster.node('P1_Infer', '1-Sample z-test for proportions:\n z = (p̂ - p₀) / √(p₀(1-p₀)/n)\nCI: p̂ ± z*√(p̂(1-p̂)/n)', shape="rectangle", style='filled', fillcolor='lightblue')
    cluster.node('P2_Infer', '2-Sample z-test for proportions:\n z = (p̂₁ - p̂₂) / √(p̂(1-p̂)(1/n₁ + 1/n₂))\nCI: (p̂₁ - p̂₂) ± z*√(p̂(1-p̂)(1/n₁ + 1/n₂))', shape="rectangle", style='filled', fillcolor='lightblue')
    cluster.node('Chi_Infer', 'Chi-Square Test:\n χ² = Σ((O - E)² / E)\nDegrees of Freedom: (r - 1)(c - 1)', shape="rectangle", style='filled', fillcolor='lightblue')

# Align subgraphs using invisible nodes and edges
dot.node('align1', '', shape="point", width="0")
dot.node('align2', '', shape="point", width="0")
dot.node('align3', '', shape="point", width="0")

dot.edge('align1', 'B', style="invis")
dot.edge('align1', 'R', style="invis")
dot.edge('align1', 'S', style="invis")

dot.edge('align2', 'Q', style="invis")
dot.edge('align2', 'cat', style="invis")
dot.edge('align2', 'T', style="invis")

dot.edge('align3', 'C', style="invis")
dot.edge('align3', 'SLR_Desc', style="invis")
dot.edge('align3', 'dep', style="invis")

# Connect nodes outside subgraphs
dot.edge('Q', 'R', label="None")
dot.edge('Q', 'cat', label="Categorical")
dot.edge('Q', 'SLR_Desc', label="Quantitative")
dot.edge('R', 'S', label="Inferential Statistics")
dot.edge('cat', 'T', label="Inferential Statistics")
dot.edge('T', 'dep', label="2 Dependent Groups")
dot.edge('T', 'indep', label="2 Independent Groups")
dot.edge('T', 'mult', label=">2 Independent Groups")
dot.edge('C', 'P1_Desc', label="None")
dot.edge('P1_Desc', 'P1_Infer', label="Inferential Statistics")
dot.edge('C', 'P2_Desc', label="2 Groups")
dot.edge('P2_Desc', 'P2_Infer', label="Inferential Statistics")
dot.edge('C', 'Chi_Desc', label="2 Variables")
dot.edge('Chi_Desc', 'Chi_Infer', label="Inferential Statistics")

# Render the diagram
dot.render('images/statistics_decision_treeV3', format='png', view=True)

```


![Statistics Decision Tree V2](images\statistics_decision_treeV3.png)